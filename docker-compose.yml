version: "3.8"

services:
  database:
    image: postgres:15
    container_name: sport-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sport_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sport_pass}
      POSTGRES_DB: ${POSTGRES_DB:-sport_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sport_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  php:
    build:
      context: ./backend
      target: frankenphp_dev
    container_name: sport-backend
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - ./backend/api:/app
    ports:
      # HTTP
      - "8080:80"
      # HTTPS
      - "443:443"
      # HTTP/3
      - "443:443/udp"
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: postgresql://${POSTGRES_USER:-sport_user}:${POSTGRES_PASSWORD:-sport_pass}@database:5432/${POSTGRES_DB:-sport_db}?serverVersion=15&charset=utf8
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # Symfony environment variables
      APP_ENV: ${APP_ENV:-dev}
      APP_DEBUG: ${APP_DEBUG:-1}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN:-'*'}
      # Symfony version for initial setup
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}

# Note: FrankenPHP combines PHP and web server functionality, so we don't need a separate Caddy service

  frontend-web:
    build: ./frontend-web
    container_name: sport-frontend-web
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - php
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080/api
      - BACKEND_API_URL=http://localhost:8080/api/sport_venues
      - NODE_ENV=development

  frontend-mobile:
    build: ./frontend-mobile
    container_name: sport-frontend-mobile
    restart: always
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
    depends_on:
      - php

  frontend-desktop:
    build: ./frontend-desktop
    container_name: sport-frontend-desktop
    restart: always
    ports:
      - "1420:1420"
    depends_on:
      - php

volumes:
  postgres_data: